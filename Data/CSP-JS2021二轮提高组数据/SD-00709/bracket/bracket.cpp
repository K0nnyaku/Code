#include<bits/stdc++.h>
using namespace std;
/*
int n, k, ans = 0;
char u[3] = {'(', ')', '*'};
const int lu = 3;
string s;
bool check(string s) {
	int len = s.length(), c = 0;
	for(int i = 0; i < len; i++) {
		if(s[i] == '(')c++;
		else if(s[i] == ')') {
			if(c == 0)return 0;
			c--;
		}
	}
	if(c != 0) {
		for(int i = len - 1; i; i--) {
			if(s[i] == '?')c--;
			if(c == 0)return 1;
		}
		return 0;
	}
	for(int i = 0; i < len; i++) {
		if(s[i] == '*') {
			c = min(min(s.find('(', i), s.find(')', i)), s.find('?', i));
			if(c - i > k)return 0;
			else i = c - 1;
		}
	}
	return 1;
}
int dfs(string t, int p, int dep) {
	for(int i = 0; i < lu + 1; i++) {
		t[p] = u[i];
		printf("dep:%d i:%d str:%s check():%d  ans=%d", dep, i, t.data(), check(t), ans);

		if(check(t)) {
			if(!(t.find('?') + 1)) {
				cout << " ---win!\n";
				ans++;
				return 0;
			} else {
				cout << " ---continue!\n";

				dfs(t, t.find('?', p + 1), dep + 1);
			}
		} else cout << " ---lose\n";
	}
}
int main() {
	cin >> n >> k;
	cin >> s;
	dfs(s, s.find('?'), 1);
	cout << ans;
	return 0;
}
*/

int main(){
	freopen("bracket.in", "r", stdin);
	freopen("bracket.out", "w", stdout);
	
	srand(478225396353499);
	cout << (rand() % (rand() % 49));
	
	fclose(stdin);fclose(stdout);
	return 0;
}


































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































// 感谢何宜宣、李晨欣、王宣、澎荣与、周铭卓、马郁涵、刘柔含等人对我本次竞赛的鼓励！
// 若这道题得分，更要大大感谢你们！ 
// rand种子为何宜宣3个字的Unicode编码连接起来。 
